trigger:
  - master
  - refs/tags/*
stages:
  - stage: Build
    displayName: "build artifacts"
    jobs:
      - job: WindowsBuild
        pool:
          vmImage: windows-2019
        displayName: Windows Build
        steps:
          - task: UseDotNet@2
            inputs:
              version: "3.0.x"
              packageType: sdk
            displayName: "Enabling dotnet core sdk 3.0"
          - task: UseDotNet@2
            inputs:
              version: "2.1.x"
              packageType: sdk
            displayName: "Enabling dotnet core sdk 2.1"
          - script: dotnet tool restore
            displayName: restoring local tool
          - script: dotnet tool run dotnet-cake build.cake -- -Configuration=Release
            displayName: build project
          - task: CopyFiles@2
            inputs:
              sourceFolder: PooledStream/bin/Release
              contents: "**/*.nupkg"
              targetFolder: "$(Build.ArtifactStagingDirectory)/nupkg"
            displayName: "copying build nupkg to staging directory"
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: "release_nupkg"
              pathToPublish: "$(Build.ArtifactStagingDirectory)/nupkg"
            displayName: publishing artifacts
          - task: CopyFiles@2
            inputs:
              sourceFolder: PooledStream/bin/Release
              contents: "**/*.snupkg"
              targetFolder: "$(Build.ArtifactStagingDirectory)/snupkg"
            displayName: "copying snupkg to staging directory"
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: "release_snupkg"
              pathToPublish: "$(Build.ArtifactStagingDirectory)/snupkg"
            displayName: publishing symbol package artifacts
  - stage: Publish
    displayName: "release artifacts"
    condition: "startsWith(variables['Build.SourceBranch'], 'refs/tags/')"
    jobs:
      - job: PublishToNuGet
        pool:
          vmImage: windows-2019
        displayName: "Publish to nuget.org and github"
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: download nupkg artifacts
            inputs:
              artifact: release_nupkg
              path: "$(Build.ArtifactStagingDirectory)"
          - task: DownloadPipelineArtifact@2
            displayName: download snupkg artifacts
            inputs:
              artifact: release_snupkg
              path: "$(Build.ArtifactStagingDirectory)"
          - task: NuGetCommand@2
            displayName: "publishing nuget package"
            inputs:
              command: push
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'pooledstream-nuget'
          - task: NuGetCommand@2
            displayName: "publishing nuget symbol package"
            inputs:
              command: push
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.snupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'pooledstream-nuget'
          - task: GitHubRelease@0
            displayName: "releasing github"
            inputs:
              gitHubConnection: "pooledstream-token"
              action: create
              target: "$(Build.SourceVersion)"
              assets: "$(Build.ArtifactStagingDirectory)/**/*"
              isDraft: true



